# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet compBoiler "A simple stl boilerplate to get started with" b
#include<bits/stdc++.h>
#include <vector>
using namespace std;

#define deb(x) cout << #x << " " << x << endl;
#define fo(i,n) for(i=0;i<n;i++)
#define Fo(i,n,k) for(i=k;i<n;i++)

template<typename... T>
void read(T&... args){
	((cin>>args), ...);
}

template<typename... T>
void write(T&&... args){
	((cout<<args<<" "), ...);
}

int main(){
	$1
}
endsnippet
